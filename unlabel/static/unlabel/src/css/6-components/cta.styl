// Change all cta colors in one mixin
cta-colors(text_default, text_hover, bg_default, bg_hover, border_default, border_hover = false) {
  border-color: border_default
      
  background-image: linear-gradient(to right, bg_hover 50%, bg_default 50%)
  
  html.webkit &:not(button) {
    background-image: linear-gradient(to right, text_hover 50%, text_default 50%), linear-gradient(to right, bg_hover 50%, bg_default 50%)
  }

  color: text_default
  
  &.is-active,
  &:focus,
  &:hover {
    color: text_hover !important
    if border_hover {
      border-color: border_hover
    }
  }
}

.cta {
  display inline-block
  padding: 17px 32px
  text-decoration: none !important
  cursor: pointer
  user-select: none
  white-space: nowrap
  font-size: 14px
  line-height: 16px
  border: 2px solid $color_darkGrey
  font-family: $font_bold
  background: transparent
  border-radius: 0
  appearance: none
  vertical-align middle
  background-repeat: no-repeat
  background-size: 201% 100% // 201% instead of 200% is a hack to completely fill the background otherwise you can sometimes see a 1px gutter between the background and the border
  background-position: 100% 0, 100% 0
  transition(background-position color border-color)
  background-clip: border-box
  -webkit-background-clip: border-box
  text-align: center
  
  html.webkit &:not(button) {
    text-fill-color: transparent
    -webkit-text-fill-color: transparent
    -moz-text-fill-color: transparent
    background-clip: text, border-box
    -webkit-background-clip: text, border-box
  }
  
  cta-colors($color_darkGrey, #fff, transparent, $color_darkGrey, $color_darkGrey)

  &:focus {
    background-position: 50% 0, 50% 0
  }
  
  &.is-active,
  &:hover {
    background-position: 0% 0, 0% 0
  }
  
  // In order to match form input elements
  &--input {
    // cta-colors(text_default, text_hover, bg_default, bg_hover, border_default, border_hover = false)
    cta-colors($color_darkGrey, #fff, $color_lightGrey, $color_darkGrey, $color_formInput, $color_darkGrey)
    border-width: 1px
    padding: 15px 32px
  }
  
  &--dark {
    // cta-colors(text_default, text_hover, bg_default, bg_hover, border_default, border_hover = false)
    cta-colors(#fff, $color_darkGrey, $color_darkGrey, transparent, $color_darkGrey)
  }
  
  &--light {
    // cta-colors(text_default, text_hover, bg_default, bg_hover, border_default, border_hover = false)
    cta-colors(#fff, $color_darkGrey, transparent, #fff, #fff)
  }
  
  &--mild {
    // cta-colors(text_default, text_hover, bg_default, bg_hover, border_default, border_hover = false)
    cta-colors($color_grey, #fff, transparent, $color_darkGrey, $color_grey, $color_darkGrey)
  }
  
  &--product {
    // cta-colors(text_default, text_hover, bg_default, bg_hover, border_default, border_hover = false)
    cta-colors($color_darkGrey, $color_darkGrey, $color_product, transparent, $color_product, $color_darkGrey)
  }
  
  &--facebook {
    // cta-colors(text_default, text_hover, bg_default, bg_hover, border_default, border_hover = false)
    cta-colors(#fff, $color_facebook, $color_facebook, transparent, $color_facebook)
  }
  
  &--smallPad {
    padding-left: 16px
    padding-right: 16px
  }
  
  &--block {
    text-align: center
    display: block
    width 100%
  }
  
  &.is-disabled,
  &[disabled="disabled"] {
    cursor: default
    opacity: 0.67
    pointer-events: none
    &:hover {
      background-position: 100% 0, 100% 0
    }
  }
  
  &--inlineIcon {    
    .fonticon {
      font-size: 16px
      vertical-align middle
    }
  }
  
  &--inlineIconLeft {
    .fonticon {
      margin-right: 12px
    }
  }
  
  &--inlineIconRight {
    .fonticon {
      margin-left: 12px
    }
  }
}